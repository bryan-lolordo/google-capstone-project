combine all the data into one big table - completed
remove if start and end time is less than 1 minute - completed
remove if null location type 
remove unessary columns - 


/*
First we will combine the 12 months of data into a new table consisting of all bike trips in 2022. 
*/

CREATE TABLE `divvy-app-data.bike_tripdata.combined_tripdata` AS
SELECT *
FROM (
    SELECT * FROM `divvy-app-data.bike_tripdata.jan2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.feb2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.mar2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.apr2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.may2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.june2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.jul2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.aug2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.sept2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.oct2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.nov2022_tripdata`
    UNION ALL
    SELECT * FROM `divvy-app-data.bike_tripdata.dec2022_tripdata`
);



WITH
  temp_2022 AS (
    SELECT
      ride_id,
      rideable_type,
      started_at,
      ended_at,
      start_station_name,
      CAST(start_station_id AS STRING) AS start_id,
      end_station_name,
      CAST(end_station_id AS STRING) AS end_id,
      start_lat,
      start_lng,
      end_lat,
      end_lng,
      member_casual
    FROM (
      SELECT *
      FROM `divvy-app-data.bike_tripdata.jan2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.feb2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.mar2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.apr2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.may2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.june2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.jul2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.aug2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.sept2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.oct2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.nov2022_tripdata`
      UNION ALL
      SELECT *
      FROM `divvy-app-data.bike_tripdata.dec2022_tripdata`)
    ),
  temp_metrics AS (
    SELECT
      ride_id,
      TIMESTAMP_DIFF(ended_at, started_at, SECOND) AS ride_total_seconds,
      ST_GEOGPOINT(start_lng,start_lat) AS start_point,
      ST_GEOGPOINT(end_lng, end_lat) AS end_point,
      CASE
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 1 THEN 'Sunday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 2 THEN 'Monday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 3 THEN 'Tuesday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 4 THEN 'Wednesday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 5 THEN 'Thursday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 6 THEN 'Friday'
        WHEN EXTRACT(DAYOFWEEK FROM started_at) = 7 THEN 'Saturday'
        END AS start_day
      FROM temp_2022
    )
    SELECT        
      a.ride_id,
      a.rideable_type,
      b.start_day,
      a.started_at,
      a.ended_at,
      b.ride_total_seconds,
      a.start_station_name,
      a.start_id,
      a.end_station_name,
      a.end_id,
      ST_DISTANCE(b.start_point, b.end_point) AS ride_distance,
      a.member_casual
    FROM
      temp_2022 AS a
    JOIN
      temp_metrics AS b
    ON a.ride_id = b.ride_id
    WHERE
      ride_total_seconds > 0
      AND
      start_station_name IS NOT NULL
      AND
      end_station_name IS NOT NULL
      
  
  
